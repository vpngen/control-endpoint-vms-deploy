name: 'control-endpoint-vms-test'

on:
  push:
    branches:
      - 'main'
      - 'hotfix-*'
  pull_request:
    branches: [ "main" ]

jobs:
  docker-build:
    runs-on: self-hosted
    environment: test
    permissions: write-all

    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: changes
        with:
            filters: |
              docker:
                - 'docker/**'
      - name: Build the runner image
        if: steps.changes.outputs.docker == 'true'
        run: docker build -f docker/runner-img/Dockerfile -t 127.0.0.1:5000/runner-img:latest .
      - name: Build the ipsec image
        if: steps.changes.outputs.docker == 'true'
        run: docker build -f docker/ipsec/Dockerfile -t 127.0.0.1:5000/ipsec-img:latest .
      - name: push the runner image
        if: steps.changes.outputs.docker == 'true'
        run: docker push 127.0.0.1:5000/runner-img:latest
      - name: push the ipsec image
        if: steps.changes.outputs.docker == 'true'
        run: docker push 127.0.0.1:5000/ipsec-img:latest

  terraform-build:
    runs-on: self-hosted
    container:
      image: 127.0.0.1:5000/runner-img:latest
      volumes:
        - /root/.ssh/:/root/.ssh
    environment: test
    if: ${{ always() }}
    needs: docker-build
    defaults:
      run:
        shell: bash

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
        token: ${{ secrets.TEST_PAT }}
    - name: set variables
      run: |
        sed -i 's/<ORG>/${{ vars.TEST_ORG }}/' terraform.tfvars.default
        sed -i 's/<VDC>/${{ vars.TEST_VDC }}/' terraform.tfvars.default
        sed -i 's/<USER>/${{ vars.TEST_USER }}/' terraform.tfvars.default
        sed -i 's/<PASSWORD>/${{ secrets.TEST_PASSWORD }}/' terraform.tfvars.default
        sed -i 's/<OS_TEMPLATE_NAME>/${{ vars.TEST_OS_TEMPLATE_NAME }}/' terraform.tfvars.default
        sed -i 's/<OS_TEMPLATES_CATALOG>/${{ vars.TEST_OS_TEMPLATES_CATALOG }}/' terraform.tfvars.default
        sed -i 's\<SSH_KEY_FILE>\${{ vars.TEST_SSH_KEY_FILE }}\' terraform.tfvars.default
        sed -i 's/<LAN_NAME>/${{ vars.TEST_LAN_NAME }}/' terraform.tfvars.default
        sed -i 's/<LAN_MANAGEMENT_IP>/${{ vars.TEST_LAN_MANAGEMENT_IP }}/' terraform.tfvars.default
        sed -i 's/<LAN_LOWEST_IP_ADDRESS>/${{ vars.TEST_LAN_LOWEST_IP_ADDRESS }}/' terraform.tfvars.default
        sed -i 's/<PREFIX>/${{ vars.TEST_PREFIX }}/' terraform.tfvars.default
        sed -i 's\<URL>\${{ vars.TEST_URL }}\' terraform.tfvars.default
        sed -i 's/<ZABBIX_SERVER_IP>/${{ vars.TEST_ZABBIX_SERVER_IP }}/' terraform.tfvars.default
        sed -i 's/<ENDPOINT_LAN_INTERFACES>/${{ vars.TEST_ENDPOINT_LAN_INTERFACES }}/' terraform.tfvars.default
        echo '["WAN_195.133.0.104_29", "195.133.0.107", 29, "195.133.0.105"],' > ips.txt
        echo '["WAN_195.133.0.104_29", "195.133.0.108", 29, "195.133.0.105"]' >> ips.txt
        sed -i "s/<WAN_NAME_IP_NET_GW>/cat ips.txt/e" terraform.tfvars.default
        
    - name: symlink to .vm-nacl-keys
      run: ln -s /root/.vm-nacl-keys /__w/control-endpoint-vms-deploy/control-endpoint-vms-deploy/.vm-nacl-keys
    - name: terraform init 
      run: terraform init -var-file="terraform.tfvars.default"
    - name: terraform plan
      run: terraform plan -input=false -var-file="terraform.tfvars.default"
    - name: terraform apply
      run: terraform apply -auto-approve -input=false -var-file="terraform.tfvars.default"
    - name: update known_hosts
      run: ssh-keygen -f "/root/.ssh/known_hosts" -R "10.255.0.5" && ssh-keygen -f "/root/.ssh/known_hosts" -R "10.255.0.4"


  client-containers:
    runs-on: self-hosted
    environment: test
    needs: terraform-build

    steps:
    - name: connecting runner container to client nets
      run: systemctl start dckr_net_connector.service
    - name: run ipsec container
      run: docker  run -d --name=ipsec --privileged --net test --ip 172.18.0.20 -v /lib/modules:/lib/modules:ro -v /root/.ssh/:/root/.ssh:ro -p 1701:1701 -p 4500:4500 -p 500:500 127.0.0.1:5000/ipsec-img

  tests:
    runs-on: self-hosted
    container:
      image: 127.0.0.1:5000/runner-img:latest
      volumes:
        - /lib/modules:/lib/modules
        - /root/.ssh/:/root/.ssh
      options:  --privileged
    environment: test
    needs:
      - terraform-build
      - client-containers

    steps:
    - uses: actions/checkout@v3
    - name: poetry install
      run: poetry install
    - name: Test with pytest
      run: sleep 180 && modprobe wireguard && sysctl net.ipv6.conf.all.disable_ipv6=0 && sysctl net.ipv6.conf.default.disable_ipv6=0 && sysctl net.ipv6.conf.lo.disable_ipv6=0 && poetry run pytest tests/test_deploy.py tests/test_brigade.py && poetry run pytest tests/test_keydesk_api.py
    - run: poetry run pytest tests/test_connection.py


  destroy-terraform:
    runs-on: self-hosted
    container:
      image: 127.0.0.1:5000/runner-img:latest
      volumes:
        - /root/.ssh/:/root/.ssh
    environment: test
    needs: tests
    defaults:
      run:
        shell: bash

    steps:
    - uses: actions/checkout@v3
    - name: set variables
      run: |
        sed -i 's/<ORG>/${{ vars.TEST_ORG }}/' terraform.tfvars.default
        sed -i 's/<VDC>/${{ vars.TEST_VDC }}/' terraform.tfvars.default
        sed -i 's/<USER>/${{ vars.TEST_USER }}/' terraform.tfvars.default
        sed -i 's/<PASSWORD>/${{ secrets.TEST_PASSWORD }}/' terraform.tfvars.default
        sed -i 's/<OS_TEMPLATE_NAME>/${{ vars.TEST_OS_TEMPLATE_NAME }}/' terraform.tfvars.default
        sed -i 's/<OS_TEMPLATES_CATALOG>/${{ vars.TEST_OS_TEMPLATES_CATALOG }}/' terraform.tfvars.default
        sed -i 's\<SSH_KEY_FILE>\${{ vars.TEST_SSH_KEY_FILE }}\' terraform.tfvars.default
        sed -i 's/<LAN_NAME>/${{ vars.TEST_LAN_NAME }}/' terraform.tfvars.default
        sed -i 's/<LAN_MANAGEMENT_IP>/${{ vars.TEST_LAN_MANAGEMENT_IP }}/' terraform.tfvars.default
        sed -i 's/<LAN_LOWEST_IP_ADDRESS>/${{ vars.TEST_LAN_LOWEST_IP_ADDRESS }}/' terraform.tfvars.default
        sed -i 's/<PREFIX>/${{ vars.TEST_PREFIX }}/' terraform.tfvars.default
        sed -i 's\<URL>\${{ vars.TEST_URL }}\' terraform.tfvars.default
        sed -i 's/<ZABBIX_SERVER_IP>/${{ vars.TEST_ZABBIX_SERVER_IP }}/' terraform.tfvars.default
        sed -i 's/<ENDPOINT_LAN_INTERFACES>/${{ vars.TEST_ENDPOINT_LAN_INTERFACES }}/' terraform.tfvars.default
        echo '["WAN_195.133.0.104_29", "195.133.0.107", 29, "195.133.0.105"],' > ips.txt
        echo '["WAN_195.133.0.104_29", "195.133.0.108", 29, "195.133.0.105"]' >> ips.txt
        sed -i "s/<WAN_NAME_IP_NET_GW>/cat ips.txt/e" terraform.tfvars.default
    - name: terraform init
      run: terraform init -var-file="terraform.tfvars.default"
    - name: terraform plan
      run: terraform plan -input=false -var-file="terraform.tfvars.default"
    - name: terraform destroy
      run: terraform destroy -auto-approve -input=false -var-file="terraform.tfvars.default"

  destroy-containers:
    runs-on: self-hosted
    environment: test
    needs: tests

    steps:
    - name: stop connector
      run: systemctl stop dckr_net_connector.service
    - name: delete ipsec
      run: docker rm ipsec -f