#!/bin/sh

# we are root
# cwd is /

false ; while [ $? -ne 0 ]; do
    sleep 0.1
    nc -zw1 {apt_proxy} 3142
done

echo 'Acquire::http::Proxy "http://[{apt_proxy}]:3142";' > /etc/apt/apt.conf.d/00aptproxy
echo '{keydesk_repo}' > /etc/apt/sources.list.d/vginfra.list

awk '/^__PAYLOAD_BEGINS__/ { print NR + 1; exit 0; }' $0 | xargs -I {} tail -n +{} $0 | base64 -d | tar xzp --no-same-owner -C / >> /install.log 2>&1

export DEBIAN_FRONTEND=noninteractive
apt-get clean >> /install.log 2>&1
apt-get update >> /install.log 2>&1
#apt-get upgrade -y >> /install.log 2>&1

ln -s /dev/null /etc/systemd/system/ipsec.service
ln -s /dev/null /etc/systemd/system/dnsmasq.service
ln -s /dev/null /etc/systemd/system/nginx.service

apt-get install -y bind9-dnsutils rsyslog iptables-persistent ipset ipset-persistent wireguard jq \
    xtables-addons-dkms dnsmasq zabbix-agent vg-nacl nginx-light endpoint-vpn-usage-stats \
    libreswan accel-ppp linux-image-generic linux-headers-generic linux-modules-extra-`uname -r` socat \
    openvpn openvpn-dco-dkms easy-rsa cloak-server cloak-client vg-outline-ss-server \
    libnginx-mod-http-perl libjson-perl vg-redirect-page >> /install.log 2>&1

apt-get remove --purge --assume-yes --auto-remove multipath-tools snapd >> /install.log 2>&1

echo "{ipv6_input}" > /ipv6.txt
echo "{ip_wan_input}" > /ip_wan.txt

for addr in `cat /ipv6.txt | sed 's/\s*,\s*/ /g'`; do
    netplan_file=`fgrep -H " ${addr}/" /etc/netplan/*.yaml | tail -1 | cut -d \: -f 1`
    if [ ! -z "${netplan_file}" ]; then
        for addr2 in `cat /ipv6.txt | sed 's/\s*,\s*/ /g'`; do
            if [ "${addr}" != "${addr2}" ]; then
                sed -i "s#\(\s*- \)${addr}/.*#"\\0\\n\\1${addr2}\/126"#g" ${netplan_file}
            fi
        done
        break
    fi
done

netplan apply

sysctl -p/etc/sysctl.d/90-endpoint-additions.conf >> /install.log 2>&1

cat >/etc/rsyslog.d/00-lea-remote.conf <<EOF
\$template outline-ss-msg, "<%pri%>%timestamp% %hostname% %programname%: [LEA-DIR]: %msg:R,ERE,1: proxy (.*)--end%\n"

if \$programname startswith "outline-ss-" then {
    :msg,contains,"udp.go:" stop
    if \$msg contains "tcp.go:" then {
        if \$msg contains " proxy " then {
            action(type="omfwd" Target="{apt_proxy}" Port="514" Protocol="tcp" template="outline-ss-msg")
        } else if (\$msg contains " address ") or (\$msg contains " TCP(") then {
            *.* action(type="ompipe" Pipe="/var/run/outline-ss-logger.pipe" tryResumeReopen="on")
        }
        stop
    }
}

:msg,contains,"[LEA-" @@[{apt_proxy}]
& stop
EOF

cat >/etc/zabbix/zabbix_agentd.conf <<EOF
PidFile=/run/zabbix/zabbix_agentd.pid
LogFile=/var/log/zabbix/zabbix_agentd.log
LogFileSize=1
Server={control_ipv6_list}
Include=/etc/zabbix/zabbix_agentd.d/*.conf
EOF

ln -sn /var/log/zabbix-agent /var/log/zabbix >> /install.log 2>&1

systemctl restart rsyslog >> /install.log 2>&1
systemctl restart systemd-journald >> /install.log 2>&1

mkdir -p /etc/iptables

cat >/etc/iptables/rules.v4 <<EOF
*filter
:INPUT DROP [0:0]
:FORWARD DROP [0:0]
:OUTPUT ACCEPT [0:0]
-A INPUT -i lo -j ACCEPT
-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
-A INPUT ! -i wg+ -s {lan_mgmt_ip}/32 -p tcp -m state --state NEW --dport 22 -j ACCEPT
-A INPUT -p icmp -m icmp --icmp-type 8 -j ACCEPT
COMMIT
*nat
:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
COMMIT
EOF

cat >/etc/iptables/rules.v6 <<EOF
*filter
:INPUT DROP [0:0]
:FORWARD DROP [0:0]
:OUTPUT ACCEPT [0:0]
-A INPUT -i lo -j ACCEPT
-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
-A INPUT ! -i wg+ -s fc00::/7 -p tcp -m state --state NEW -m multiport --dports 8080,10050 -j ACCEPT
-A INPUT -p ipv6-icmp -j ACCEPT
COMMIT
*nat
:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
COMMIT
EOF

iptables-restore < /etc/iptables/rules.v4 >> /install.log 2>&1
ip6tables-restore < /etc/iptables/rules.v6 >> /install.log 2>&1

systemctl restart outline-ss-logger.service >> /install.log 2>&1
systemctl enable outline-ss-logger.service >> /install.log 2>&1

systemctl restart zabbix-agent.service >> /install.log 2>&1
systemctl enable zabbix-agent.service >> /install.log 2>&1

chmod 600 /vg-endpoint.json >> /install.log 2>&1
chmod 700 /wg-mng.sh >> /install.log 2>&1
systemctl enable --now wg-mng.socket >> /install.log 2>&1

swap_size="{endpoint_swap_size}"
if [ $(("${swap_size// }"+0)) -gt 0 ]; then
    dd if=/dev/zero of=/swapfile bs=1M count=$(("${swap_size// }"+0)) >> /install.log 2>&1
    chmod 600 /swapfile >> /install.log 2>&1
    mkswap /swapfile >> /install.log 2>&1
    echo '/swapfile none swap defaults 0 0' >> /etc/fstab
    swapon -a  >> /install.log 2>&1
fi

exit 0
__PAYLOAD_BEGINS__
